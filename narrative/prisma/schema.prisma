// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

//nextAuth用
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

//nextAuth用
model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

//ユーザー情報
model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    password      String?
    image         String?
    created_at    DateTime?
    accounts      Account[]
    sessions      Session[]
    creations     Creation[]
}

//創作物情報
model Creation {
    id          String    @id @default(cuid())
    userId      String
    title       String?
    world_view  String
    image       String
    deploy_link String
    created_at  DateTime?
    persons     Person[]

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

//人物情報
model Person {
    id          String    @id @default(cuid())
    creationId  String
    name        String?
    species     String
    personality String
    personable  String
    image       String
    skill       String
    created_at  DateTime?

    creation Creation @relation(fields: [creationId], references: [id], onDelete: Cascade)
}
